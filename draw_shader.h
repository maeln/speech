/* File generated with Shader Minifier 1.1.6
 * http://www.ctrl-alt-test.fr
 */
#ifndef DRAW_SHADER_H_
# define DRAW_SHADER_H_
# define VAR_IRESOLUTION "v"
# define VAR_ITIME "f"

const char *draw_frag =
 "#version 430\n"
 "layout(location=0)uniform vec4 v;"
 "layout(location=1)uniform int f;\n"
 "#define MAXSTEPS 128\n"
 "#define MINDIST 0.0005\n"
 "#define MAXDIST 20.0\n"
 "#define saturate(x)(clamp(0.0,1.0,x))\n"
 "float t(in vec2 f)"
 "{"
   "return fract(sin(dot(f.xy,vec2(12.9898,78.233)))*43758.5);"
 "}"
 "float s(in vec2 f)"
 "{"
   "vec2 v=floor(f),x=fract(f);"
   "float m=t(v),c=t(v+vec2(1.,0.)),i=t(v+vec2(0.,1.)),n=t(v+vec2(1.,1.));"
   "vec2 s=x*x*(3.-2.*x);"
   "return mix(m,c,s.x)+(i-m)*s.y*(1.-s.x)+(n-c)*s.x*s.y;"
 "}"
 "float n(in vec2 f)"
 "{"
   "float v=0.,x=.5;"
   "for(int r=0;r<5;r++)"
     "v+=x*s(f),f*=2.,x*=.5;"
   "return v;"
 "}"
 "mat4 n(vec3 f,float v)"
 "{"
   "f=normalize(f);"
   "float s=sin(v),c=cos(v),x=1.-c;"
   "return mat4(x*f.x*f.x+c,x*f.x*f.y-f.z*s,x*f.z*f.x+f.y*s,0.,x*f.x*f.y+f.z*s,x*f.y*f.y+c,x*f.y*f.z-f.x*s,0.,x*f.z*f.x-f.y*s,x*f.y*f.z+f.x*s,x*f.z*f.z+c,0.,0.,0.,0.,1.);"
 "}struct pLight{vec3 position;vec3 ambiant;vec3 diffuse;vec3 specular;};"
 "float n(float v,float f,float x)"
 "{"
   "float s=clamp(.5+.5*(f-v)/x,0.,1.);"
   "return mix(f,v,s)-x*s*(1.-s);"
 "}"
 "float s(vec3 f,vec3 v)"
 "{"
   "return length(max(abs(f)-v,0.));"
 "}"
 "float e(vec3 f)"
 "{"
   "return f.y;"
 "}"
 "float e(vec3 f,float v)"
 "{"
   "return length(f)-v;"
 "}"
 "float t(vec3 f,vec2 v)"
 "{"
   "vec3 c=abs(f);"
   "return max(c.z-v.y,max(c.x*.866025+c.y*.5,c.y)-v.x);"
 "}"
 "vec2 x(vec2 f,vec2 v)"
 "{"
   "return f.x<v.x?f:v;"
 "}"
 "vec2 x(vec3 v)"
 "{"
   "vec3 x=vec3(2.,2.,2.),c=mod(v+.5*x,x)-.5*x;"
   "c=(n(vec3(1.,0.,0.),float(f)/1000.)*vec4(c,1.)).xyz;"
   "float m=s(c-vec3(0,0,0),vec3(.5)),y=e(c-vec3(0,1.,1.),.5);"
   "vec2 p=vec2(n(m,y,.3),1.);"
   "return vec2(m,1.);"
 "}"
 "vec2 m(vec3 v)"
 "{"
   "float c=e(v-vec3(1.,1.+sin(float(f)/1000.)*sin(float(f)/1000.*2.),cos(cos(cos(float(f)/1000.)*.3)*2.)),.5);"
   "return vec2(c,2.);"
 "}"
 "vec2 p(vec3 f)"
 "{"
   "return x(f);"
 "}"
 "vec2 c(vec3 f)"
 "{"
   "return p(f);"
 "}"
 "vec3 r(vec3 f)"
 "{"
   "vec2 v=vec2(0.,MINDIST);"
   "return normalize(vec3(c(f+v.yxx).x-c(f-v.yxx).x,c(f+v.xyx).x-c(f-v.xyx).x,c(f+v.xxy).x-c(f-v.xxy).x));"
 "}"
 "vec2 c(vec3 f,vec3 v)"
 "{"
   "float x=MINDIST;"
   "int m=0;"
   "float r=-1.;"
   "for(int s=0;s<MAXSTEPS;++s)"
     "{"
       "++m;"
       "vec2 n=c(f+x*v);"
       "if(n.x<MINDIST||x>=MAXDIST)"
         "break;"
       "x+=n.x;"
       "r=n.y;"
     "}"
   "return vec2(x,x>MAXDIST?-1.:r);"
 "}"
 "vec3 c(vec3 f,vec3 v,float x)"
 "{"
   "float m=1.-min(exp(-x*.4),1.);"
   "return v;"
 "}"
 "vec3 e(vec2 f,vec3 v,vec3 x)"
 "{"
   "vec3 r=x;"
   "if(f.y<0.)"
     "return r;"
   "r=normalize(vec3(.3*log2(f.x),.2,.8*(1.-log2(f.x))));"
   "return c(x,r,f.x);"
 "}"
 "vec3 c(vec3 f,vec3 v,vec3 x,pLight s,float c)"
 "{"
   "vec3 m=normalize(s.position-f),r=normalize(v-f),i=reflect(m,x),p=s.ambiant,n=max(dot(m,x),0.)*s.diffuse,y=pow(max(dot(i,r),0.),c)*s.specular;"
   "return p+.5*(n+y);"
 "}"
 "float c(vec3 v,vec3 f,vec3 x,pLight s)"
 "{"
   "float c=1.;"
   "vec3 m=s.position-v,i=reflect(m,x),r=f-v;"
   "return pow(dot(i,r),c);"
 "}"
 "mat3 M(float f)"
 "{"
   "float v=sin(f),x=cos(f);"
   "return mat3(1.,0.,0.,0.,x,v,0.,-v,x);"
 "}"
 "void main()"
 "{"
   "pLight x=pLight(vec3(float(f)/1000.-3.,2.*sin(float(f)/1000.),cos(float(f)/1000.)*3.),vec3(.8),vec3(1.,0.,0.),vec3(.8,0.,0.)),s=pLight(vec3(float(f)/1000.-3.,-2.,-3.),vec3(.3),vec3(0.,0.,1.),vec3(0.,0.,.8));"
   "vec2 m=(-v.xy+2.*gl_FragCoord.xy)/v.y,i=gl_FragCoord.xy/v.xy;"
   "int p=int(i.x*512.);"
   "vec3 n=vec3(float(f)/1000.-1.,.5,0.),y=vec3(float(f)/1000.,sin(float(f)/1000.),cos(float(f)/1000.)),d=vec3(0.,sin(float(f)/1000.*.5),cos(float(f)/1000.*.5));"
   "n=y+vec3(1.,0.,0.);"
   "vec3 M=normalize(n-y),z=normalize(cross(d,y)),g=normalize(cross(y,z)),T=normalize(z*m.x+g*m.y+M),t=vec3(255.,122.,122.)/255.,l=vec3(134.,22.,87.)/255.,a=mix(l,t,gl_FragCoord.y/v.y),o=a;"
   "vec2 u=c(y,T);"
   "vec3 S=y+u.x*T,I=r(S);"
   "if(u.y>=0.)"
     "a=e(u,S,a),a=a*c(S,y,I,x,2.);"
   "gl_FragColor=vec4(a,u.x/MAXDIST);"
 "}";

#endif // DRAW_SHADER_H_
