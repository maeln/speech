/* File generated with Shader Minifier 1.1.6
 * http://www.ctrl-alt-test.fr
 */
#ifndef DRAW_SHADER_H_
# define DRAW_SHADER_H_
# define VAR_IRESOLUTION "v"
# define VAR_ITIME "x"

const char *draw_frag =
 "#version 430\n"
 "layout(location=0)uniform vec4 v;"
 "layout(location=1)uniform int x;\n"
 "#define PI 3.1415\n"
 "#define MAXSTEPS 128\n"
 "#define MINDIST 0.0005\n"
 "#define MAXDIST 20.0\n"
 "#define saturate(x)(clamp(0.0,1.0,x))\nstruct pLight{vec3 position;vec3 ambiant;vec3 diffuse;vec3 specular;};"
 "float y=float(x)/1000.;"
 "float t(in vec2 v)"
 "{"
   "return fract(sin(dot(v.xy,vec2(12.9898,78.233)))*43758.5);"
 "}"
 "float t(vec3 v,float x)"
 "{"
   "return length(v)-x;"
 "}"
 "vec3 s(int v)"
 "{"
   "float x=5.,i=y+float(v)*.2,n=floor(i/x+1.),c=.5-t(vec2(v,v)*n),f=.5-t(vec2(v-1,v+1)*n),s=.5-t(vec2(v+1,v-1)*n);"
   "vec3 M=vec3(c,f,s);"
   "return M*mod(i,x)*2.;"
 "}"
 "vec2 n(vec3 v)"
 "{"
   "float x=MAXDIST,y=0.;"
   "for(int f=0;f<100;++f)"
     "{"
       "float n=t(v-s(f),.1);"
       "if(n<x)"
         "x=n,y=float(f);"
     "}"
   "return vec2(x,y);"
 "}"
 "vec3 f(vec3 v)"
 "{"
   "vec2 x=vec2(0.,MINDIST);"
   "return normalize(vec3(n(v+x.yxx).x-n(v-x.yxx).x,n(v+x.xyx).x-n(v-x.xyx).x,n(v+x.xxy).x-n(v-x.xxy).x));"
 "}"
 "vec2 f(vec3 v,vec3 x)"
 "{"
   "float f=MINDIST;"
   "int y=0;"
   "float i=-1.;"
   "for(int s=0;s<MAXSTEPS;++s)"
     "{"
       "++y;"
       "vec2 M=n(v+f*x);"
       "if(M.x<MINDIST||f>=MAXDIST)"
         "break;"
       "f+=M.x;"
       "i=M.y;"
     "}"
   "return vec2(f,f>MAXDIST?-1.:i);"
 "}"
 "vec3 f(vec2 v,vec3 x,vec3 y)"
 "{"
   "vec3 f=y;"
   "float i=t(vec2(v.y,v.y)),n=t(vec2(v.y-1.,v.y+1.)),s=t(vec2(v.y+1.,v.y-1.));"
   "return vec3(i,n,s);"
 "}"
 "vec3 f(vec3 x,vec3 v,vec3 y,pLight n,float f)"
 "{"
   "vec3 i=normalize(n.position-x),s=normalize(v-x),c=reflect(i,y),M=n.ambiant,d=max(dot(i,y),0.)*n.diffuse,T=pow(max(dot(c,s),0.),f)*n.specular;"
   "return M+.5*(d+T);"
 "}"
 "float n(vec2 v,float x)"
 "{"
   "return length(v)-x;"
 "}"
 "float n(in vec2 v,in vec2 x,in vec2 y,in float f,in float s)"
 "{"
   "v*=mat2(x.x,x.y,-x.y,x.x);"
   "v.x=abs(v.x);"
   "float n=y.y*v.x>y.x*v.y?dot(v.xy,y):length(v);"
   "return sqrt(max(0.,dot(v,v)+f*f-2.*f*n))-s;"
 "}"
 "void main()"
 "{"
   "pLight x=pLight(vec3(y-3.,2.*sin(y),cos(y)*3.),vec3(.8),vec3(1.,0.,0.),vec3(.8,0.,0.));"
   "vec2 M=(-v.xy+2.*gl_FragCoord.xy)/v.y,i=gl_FragCoord.xy/v.xy;"
   "int s=int(i.x*512.);"
   "vec3 c=vec3(0.,0.,0.),d=vec3(2.,2.,2.),T=vec3(0.,1.,0.),r=normalize(c-d),l=normalize(cross(T,d)),g=normalize(cross(d,l)),t=normalize(l*M.x+g*M.y+r),e=vec3(255.,122.,122.)/255.,m=vec3(134.,22.,87.)/255.,p=mix(m,e,gl_FragCoord.y/v.y),o=p;"
   "vec2 a=f(d,t);"
   "vec3 P=d+a.x*t,u=f(P);"
   "if(a.y>0.)"
     "p=f(a,P,p),p=p*f(P,d,u,x,2.);"
   "float I=v.x/v.y;"
   "vec2 S=M;"
   "S+=vec2(.7*I,.7);"
   "float h=n(S,.1);"
   "p=mix(p,vec3(1.),smoothstep(3./v.y,0.,h));"
   "float D=PI/2.*y*2.,z=PI/4.*(1.-sin(y)/2.);"
   "h=n(S,vec2(sin(D),cos(D)),vec2(sin(z),cos(z)),.2,.02);"
   "p=mix(p,vec3(1.),smoothstep(4./v.y,0.,h));"
   "gl_FragColor=vec4(p,1.);"
 "}";

#endif // DRAW_SHADER_H_
